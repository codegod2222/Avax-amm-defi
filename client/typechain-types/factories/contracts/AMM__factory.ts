/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { AMM, AMMInterface } from "../../contracts/AMM";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "getEquivalentToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_outToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    name: "getSwapEstimateIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "getSwapEstimateOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "getWithdrawEstimate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountX",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenY",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountY",
        type: "uint256",
      },
    ],
    name: "provide",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_outToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200217c3803806200217c83398181016040528101906200003791906200013e565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000185565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b60006200010682620000e5565b9050919050565b6200011881620000f9565b81146200012457600080fd5b50565b60008151905062000138816200010d565b92915050565b60008060408385031215620001585762000157620000c0565b5b6000620001688582860162000127565b92505060206200017b8582860162000127565b9150509250929050565b611fe780620001956000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806387b292f91161007157806387b292f91461018d578063a37230ae146101bd578063aaf5eb68146101ed578063bfa7d42f1461020b578063d72b9da21461023b578063df791e501461026b576100a9565b8063026c4207146100ae5780631877bb5c146100cc5780632e1a7d4d146100fc5780633279081a1461012d57806349b81b101461015d575b600080fd5b6100b661029b565b6040516100c39190611689565b60405180910390f35b6100e660048036038101906100e19190611707565b6102a1565b6040516100f39190611689565b60405180910390f35b61011660048036038101906101119190611760565b6102b9565b60405161012492919061178d565b60405180910390f35b610147600480360381019061014291906117f4565b6106ed565b6040516101549190611689565b60405180910390f35b6101776004803603810190610172919061185b565b610cf2565b6040516101849190611689565b60405180910390f35b6101a760048036038101906101a2919061185b565b610e81565b6040516101b49190611689565b60405180910390f35b6101d760048036038101906101d2919061185b565b610f6c565b6040516101e49190611689565b60405180910390f35b6101f5611146565b6040516102029190611689565b60405180910390f35b6102256004803603810190610220919061185b565b61114d565b6040516102329190611689565b60405180910390f35b6102556004803603810190610250919061189b565b61125b565b6040516102629190611689565b60405180910390f35b610285600480360381019061028091906118c8565b611273565b6040516102929190611689565b60405180910390f35b60025481565b60036020528060005260406000206000915090505481565b600080600060025411610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890611978565b60405180910390fd5b60008311610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b906119e4565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90611a50565b60405180910390fd5b60006103f260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610e81565b90506000610422600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610e81565b905084600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104739190611a9f565b92505081905550846002600082825461048c9190611a9f565b9250508190555081600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105039190611a9f565b925050819055508060046000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057b9190611a9f565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105dd929190611ae2565b602060405180830381600087803b1580156105f757600080fd5b505af115801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190611b43565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161068d929190611ae2565b602060405180830381600087803b1580156106a757600080fd5b505af11580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190611b43565b508181935093505050915091565b60008460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107975750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd90611bbc565b60405180910390fd5b8360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061087e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490611bbc565b60405180910390fd5b60008611610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f790611c28565b60405180910390fd5b60008411610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90611c28565b60405180910390fd5b600080600254141561096657620f4240606461095f9190611c48565b9050610a66565b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054886002546109b69190611c48565b6109c09190611cd1565b90506000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205487600254610a129190611c48565b610a1c9190611cd1565b9050808214610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790611d74565b60405180910390fd5b81925050505b60008111610aa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa090611e06565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610ae693929190611e26565b602060405180830381600087803b158015610b0057600080fd5b505af1158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b389190611b43565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610b7693929190611e26565b602060405180830381600087803b158015610b9057600080fd5b505af1158015610ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc89190611b43565b5086600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c189190611e5d565b9250508190555084600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c6e9190611e5d565b925050819055508060026000828254610c879190611e5d565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cdd9190611e5d565b92505081905550809350505050949350505050565b60008060025411610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611978565b60405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548210610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db090611eff565b60405180910390fd5b6000610dc4846114df565b9050600083600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e139190611c48565b9050600084600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e629190611a9f565b905060008183610e729190611cd1565b90508094505050505092915050565b60008060025411610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90611978565b60405180910390fd5b600254821115610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0390611f91565b60405180910390fd5b600254600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f5a9190611c48565b610f649190611cd1565b905092915050565b60008260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806110165750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611055576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104c90611bbc565b60405180910390fd5b60006002541161109a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109190611978565b60405180910390fd5b60006110a5856114df565b9050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111329190611c48565b61113c9190611cd1565b9250505092915050565b620f424081565b60008060025411611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a90611978565b60405180910390fd5b600061119e846114df565b90506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846111ed9190611c48565b9050600084600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461123c9190611e5d565b90506000818361124c9190611cd1565b90508094505050505092915050565b60046020528060005260406000206000915090505481565b600080600254116112b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b090611978565b60405180910390fd5b600082116112fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f390611c28565b60405180910390fd5b6000611308858461114d565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161134793929190611e26565b602060405180830381600087803b15801561136157600080fd5b505af1158015611375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113999190611b43565b5082600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113e99190611e5d565b9250508190555080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461143f9190611a9f565b925050819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611481929190611ae2565b602060405180830381600087803b15801561149b57600080fd5b505af11580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d39190611b43565b50809150509392505050565b60008160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806115895750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6115c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bf90611bbc565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561164657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915061166a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b50919050565b6000819050919050565b61168381611670565b82525050565b600060208201905061169e600083018461167a565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116d4826116a9565b9050919050565b6116e4816116c9565b81146116ef57600080fd5b50565b600081359050611701816116db565b92915050565b60006020828403121561171d5761171c6116a4565b5b600061172b848285016116f2565b91505092915050565b61173d81611670565b811461174857600080fd5b50565b60008135905061175a81611734565b92915050565b600060208284031215611776576117756116a4565b5b60006117848482850161174b565b91505092915050565b60006040820190506117a2600083018561167a565b6117af602083018461167a565b9392505050565b60006117c1826116c9565b9050919050565b6117d1816117b6565b81146117dc57600080fd5b50565b6000813590506117ee816117c8565b92915050565b6000806000806080858703121561180e5761180d6116a4565b5b600061181c878288016117df565b945050602061182d8782880161174b565b935050604061183e878288016117df565b925050606061184f8782880161174b565b91505092959194509250565b60008060408385031215611872576118716116a4565b5b6000611880858286016117df565b92505060206118918582860161174b565b9150509250929050565b6000602082840312156118b1576118b06116a4565b5b60006118bf848285016117df565b91505092915050565b6000806000606084860312156118e1576118e06116a4565b5b60006118ef868287016117df565b9350506020611900868287016117df565b92505060406119118682870161174b565b9150509250925092565b600082825260208201905092915050565b7f5a65726f204c6971756964697479000000000000000000000000000000000000600082015250565b6000611962600e8361191b565b915061196d8261192c565b602082019050919050565b6000602082019050818103600083015261199181611955565b9050919050565b7f73686172652063616e6e6f74206265207a65726f210000000000000000000000600082015250565b60006119ce60158361191b565b91506119d982611998565b602082019050919050565b600060208201905081810360008301526119fd816119c1565b9050919050565b7f496e73756666696369656e742073686172650000000000000000000000000000600082015250565b6000611a3a60128361191b565b9150611a4582611a04565b602082019050919050565b60006020820190508181036000830152611a6981611a2d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611aaa82611670565b9150611ab583611670565b925082821015611ac857611ac7611a70565b5b828203905092915050565b611adc816116c9565b82525050565b6000604082019050611af76000830185611ad3565b611b04602083018461167a565b9392505050565b60008115159050919050565b611b2081611b0b565b8114611b2b57600080fd5b50565b600081519050611b3d81611b17565b92915050565b600060208284031215611b5957611b586116a4565b5b6000611b6784828501611b2e565b91505092915050565b7f546f6b656e206973206e6f7420696e2074686520706f6f6c0000000000000000600082015250565b6000611ba660188361191b565b9150611bb182611b70565b602082019050919050565b60006020820190508181036000830152611bd581611b99565b9050919050565b7f416d6f756e742063616e6e6f74206265207a65726f2100000000000000000000600082015250565b6000611c1260168361191b565b9150611c1d82611bdc565b602082019050919050565b60006020820190508181036000830152611c4181611c05565b9050919050565b6000611c5382611670565b9150611c5e83611670565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c9757611c96611a70565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cdc82611670565b9150611ce783611670565b925082611cf757611cf6611ca2565b5b828204905092915050565b7f4571756976616c656e742076616c7565206f6620746f6b656e73206e6f74207060008201527f726f76696465642e2e2e00000000000000000000000000000000000000000000602082015250565b6000611d5e602a8361191b565b9150611d6982611d02565b604082019050919050565b60006020820190508181036000830152611d8d81611d51565b9050919050565b7f41737365742076616c7565206c657373207468616e207468726573686f6c642060008201527f666f7220636f6e747269627574696f6e21000000000000000000000000000000602082015250565b6000611df060318361191b565b9150611dfb82611d94565b604082019050919050565b60006020820190508181036000830152611e1f81611de3565b9050919050565b6000606082019050611e3b6000830186611ad3565b611e486020830185611ad3565b611e55604083018461167a565b949350505050565b6000611e6882611670565b9150611e7383611670565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ea857611ea7611a70565b5b828201905092915050565b7f496e73756666696369656e7420706f6f6c2062616c616e636500000000000000600082015250565b6000611ee960198361191b565b9150611ef482611eb3565b602082019050919050565b60006020820190508181036000830152611f1881611edc565b9050919050565b7f53686172652073686f756c64206265206c657373207468616e20746f74616c5360008201527f6861726500000000000000000000000000000000000000000000000000000000602082015250565b6000611f7b60248361191b565b9150611f8682611f1f565b604082019050919050565b60006020820190508181036000830152611faa81611f6e565b905091905056fea26469706673582212203b2b2121e9f1513eb7486c35ce0deef0b1a456b75e5cf70d1c30608a49a061db64736f6c63430008090033";

type AMMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AMMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AMM__factory extends ContractFactory {
  constructor(...args: AMMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenX: PromiseOrValue<string>,
    _tokenY: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AMM> {
    return super.deploy(_tokenX, _tokenY, overrides || {}) as Promise<AMM>;
  }
  override getDeployTransaction(
    _tokenX: PromiseOrValue<string>,
    _tokenY: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenX, _tokenY, overrides || {});
  }
  override attach(address: string): AMM {
    return super.attach(address) as AMM;
  }
  override connect(signer: Signer): AMM__factory {
    return super.connect(signer) as AMM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMInterface {
    return new utils.Interface(_abi) as AMMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AMM {
    return new Contract(address, _abi, signerOrProvider) as AMM;
  }
}
